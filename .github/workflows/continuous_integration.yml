name: Tests
on: [push]
jobs:
  functional-tests:
    name: Functional tests
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8']
        node-version: ['14.7']
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 'root1453'
        ports:
          - 3306:3306
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: xdebug
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: |
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
      - name: Install NPM dependencies
        run: |
          npm install
          npm run dev
      - name: Prepare database
        run: |
          php bin/console d:d:d --if-exists --force --env=test
          php bin/console d:d:c --env=test
          php bin/console d:s:u -f --env=test
          php bin/console d:f:l -n --env=test
          php bin/console doctrine:database:create
          php bin/console doctrine:schema:update --force
          php bin/console doctrine:fixtures:load -n
      - name: Run Unit Test
        run: php bin/phpunit --testsuite unit
      - name: Run Functional Test
        run: php bin/phpunit --testsuite functional
      - name: Anlyse Symfony Configuration YAML
        run: php bin/console lint:yaml config
      - name: Analyze Twig
        run: |
          php bin/console lint:twig templates
          vendor/bin/twigcs templates
      - name: Analyse Symfony Container
        run: php bin/console lint:container
      - name: PHP Metrics
        run: php ./vendor/bin/phpmetrics ./src
      - name: Analyse Copy/Paste Detector (PHPCPD)
        run: vendor/bin/phpcpd src/
      - name: PHP Mess Detector
        run: vendor/bin/phpmd src/ text .phpmd.xml
      - name: Analyse Quality Code Php Insights
        run: vendor/bin/phpinsights --no-interaction
      - name: Analyse Static Code Php Stan
        run: php vendor/bin/phpstan analyse -c phpstan.neon src --no-progress